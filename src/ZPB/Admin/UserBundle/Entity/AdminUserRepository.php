<?php

namespace ZPB\Admin\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;

/**
 * AdminUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdminUserRepository extends EntityRepository implements UserProviderInterface
{
    public function findOneByEmailOrUsername($username)
    {
        $qb = $this->createQueryBuilder('u')
            ->andWhere('u.username=:username OR u.email=:email')
            ->setParameter('username', $username)
            ->setParameter('email', $username);
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function loadUserByUsername($username)
    {
        $user = $this->findOneByEmailOrUsername($username);
        if(!$user){
            throw new UsernameNotFoundException();
        }
        return $user;
    }

    public function refreshUser(UserInterface $user)
    {
        $class = get_class($user);
        if(!$this->supportsClass($class)){
            throw new UnsupportedUserException();
        }
        if(null === $user = $this->find($user->getId())){
            throw new UsernameNotFoundException();
        }
        return $user;
    }

    public function supportsClass($class)
    {
        return $this->getEntityName() === $class || is_subclass_of($class, $this->getEntityName());
    }

    public function generatePassword()
    {
        $numbers = range(0,9);
        $lowers = range('a','z');
        $uppers = range('A','Z');
        $chars = [];
        for($i = 0; $i<4; $i++){
            $chars[] = $numbers[mt_rand(0,9)];
            $chars[] = $lowers[mt_rand(0,25)];
            $chars[] = $uppers[mt_rand(0,25)];
        }
        shuffle($chars);
        return implode('',$chars);

    }
}
